#!/usr/bin/env pwsh
# Script para probar el postback-service desplegado

$SERVICE_URL = "https://postback-service-stg-697203931362.us-central1.run.app"

Write-Host "üöÄ Probando postback-service en staging..." -ForegroundColor Green

# Test 1: Endpoint ra√≠z
Write-Host "`nüìã Test 1: Informaci√≥n del servicio" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$SERVICE_URL/" -Method GET
    $response | ConvertTo-Json -Depth 3
} catch {
    Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 2: Health check
Write-Host "`nüîç Test 2: Health check" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$SERVICE_URL/api/health" -Method GET -TimeoutSec 30
    $response | ConvertTo-Json -Depth 3
} catch {
    Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Postback endpoint (sin datos para verificar que responde)
Write-Host "`nüì§ Test 3: Endpoint de postback (prueba b√°sica)" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$SERVICE_URL/api/postbacks/send" -Method POST -ContentType "application/json" -Body "{}" -TimeoutSec 30
    $response | ConvertTo-Json -Depth 3
} catch {
    Write-Host "‚ö†Ô∏è  Respuesta esperada (datos incompletos): $($_.Exception.Message)" -ForegroundColor Yellow
}

Write-Host "`n‚úÖ Pruebas completadas" -ForegroundColor Green