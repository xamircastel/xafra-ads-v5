version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: xafra-postgres
    environment:
      POSTGRES_USER: xafra_user
      POSTGRES_PASSWORD: xafra_password
      POSTGRES_DB: xafra_ads_v5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xafra_user -d xafra_ads_v5"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: xafra-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway (Nginx)
  nginx:
    build:
      context: ./infrastructure/nginx
      dockerfile: Dockerfile
    container_name: xafra-nginx
    ports:
      - "3000:80"
    depends_on:
      - core-service
      - tracking-service
      - auth-service
      - campaign-service
      - postback-service
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core Service
  core-service:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.service
      args:
        SERVICE_NAME: core-service
    container_name: xafra-core
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://xafra_user:xafra_password@postgres:5432/xafra_ads_v5
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/core-service:/app/services/core-service
      - ./packages:/app/packages
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Tracking Service
  tracking-service:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.service
      args:
        SERVICE_NAME: tracking-service
    container_name: xafra-tracking
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://xafra_user:xafra_password@postgres:5432/xafra_ads_v5
      - REDIS_URL=redis://redis:6379
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/tracking-service:/app/services/tracking-service
      - ./packages:/app/packages

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.service
      args:
        SERVICE_NAME: auth-service
    container_name: xafra-auth
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://xafra_user:xafra_password@postgres:5432/xafra_ads_v5
      - REDIS_URL=redis://redis:6379
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/auth-service:/app/services/auth-service
      - ./packages:/app/packages

  # Campaign Service
  campaign-service:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.service
      args:
        SERVICE_NAME: campaign-service
    container_name: xafra-campaign
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://xafra_user:xafra_password@postgres:5432/xafra_ads_v5
      - REDIS_URL=redis://redis:6379
    ports:
      - "3004:3004"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/campaign-service:/app/services/campaign-service
      - ./packages:/app/packages

  # Postback Service
  postback-service:
    build:
      context: .
      dockerfile: ./infrastructure/docker/Dockerfile.service
      args:
        SERVICE_NAME: postback-service
    container_name: xafra-postback
    environment:
      - NODE_ENV=development
      - PORT=3005
      - DATABASE_URL=postgresql://xafra_user:xafra_password@postgres:5432/xafra_ads_v5
      - REDIS_URL=redis://redis:6379
    ports:
      - "3005:3005"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/postback-service:/app/services/postback-service
      - ./packages:/app/packages

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: xafra-network