# Multi-stage build for postback-service
FROM node:20-alpine AS base

# Install build dependencies and OpenSSL
RUN apk add --no-cache python3 make g++ openssl-dev

WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./
COPY packages/shared/package*.json ./packages/shared/
COPY packages/database/package*.json ./packages/database/
COPY services/postback-service/package*.json ./services/postback-service/

# Install all dependencies
RUN npm ci --include=dev

# Copy source code
COPY packages/ ./packages/
COPY services/postback-service/ ./services/postback-service/
COPY environments/staging/.env.staging .env
COPY tsconfig.json ./

# Build shared packages first
RUN npm run build -w @xafra/shared
RUN npm run build -w @xafra/database

# Generate Prisma client with proper schema path
RUN npx prisma generate --schema=packages/database/prisma/schema.prisma

# Build postback-service
WORKDIR /app/services/postback-service

# Clean previous builds
RUN rm -rf dist

# Build with debug info
RUN echo "Building postback-service..."
RUN npx tsc
RUN echo "Checking dist contents:" && ls -la dist/ && echo "Checking dist structure:" && find dist/ -name "*.js" -type f | head -10

# Production stage
FROM node:20-alpine AS production

# Install OpenSSL for Prisma
RUN apk add --no-cache openssl

WORKDIR /app

# Copy built artifacts
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/packages ./packages
COPY --from=base /app/services/postback-service/dist ./services/postback-service/dist
COPY --from=base /app/services/postback-service/package*.json ./services/postback-service/

# Set working directory for the service
WORKDIR /app/services/postback-service

# Environment variables
ENV NODE_ENV=staging
ENV PORT=8080

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Dynamic command to handle different TypeScript output structures
CMD ["sh", "-c", "find dist -name 'index.js' -type f | head -1 | xargs node"]