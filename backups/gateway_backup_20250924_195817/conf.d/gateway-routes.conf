# Xafra-ads v5 - Gateway Routes Configuration
# Service routing rules for API Gateway

# Global proxy settings
proxy_ssl_verify off;
proxy_ssl_server_name on;
proxy_ssl_protocols TLSv1.2 TLSv1.3;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header Connection "";
proxy_http_version 1.1;
proxy_connect_timeout 5s;
proxy_send_timeout 10s;
proxy_read_timeout 10s;
proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

# ===========================================
# CORE SERVICE ROUTES (Main ad redirects)
# ===========================================

# Ad redirect endpoint - HIGHEST PRIORITY (must be < 50ms)
location ~ "^/[a-zA-Z0-9]{6,12}$" {
    limit_req zone=ads_redirect burst=20 nodelay;
    
    # Cache for performance
    proxy_cache_bypass $http_pragma $http_authorization;
    proxy_no_cache $http_pragma $http_authorization;
    
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    
    # Performance headers
    add_header X-Service "core-service" always;
    add_header X-Response-Time $request_time always;
}

# Core service API endpoints
location /api/config {
    limit_req zone=api_general burst=10 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service" always;
}

location /api/util/ {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service" always;
}

# Core service health check
location /health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service" always;
}

# ===========================================
# TRACKING SERVICE ROUTES
# ===========================================

# Click tracking - HIGH PRIORITY
location /ads/click {
    limit_req zone=tracking burst=50 nodelay;
    proxy_pass https://tracking-service-backend;
    proxy_set_header Host tracking-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "tracking-service" always;
}

# Conversion tracking
location /confirm/sale {
    limit_req zone=tracking burst=20 nodelay;
    proxy_pass https://tracking-service-backend;
    proxy_set_header Host tracking-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "tracking-service" always;
}

# Analytics endpoints
location /analytics/ {
    limit_req zone=api_general burst=10 nodelay;
    proxy_pass https://tracking-service-backend;
    proxy_set_header Host tracking-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "tracking-service" always;
}

# Tracking service health
location /tracking/health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://tracking-service-backend/health;
    proxy_set_header Host tracking-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "tracking-service" always;
}

# ===========================================
# AUTH SERVICE ROUTES
# ===========================================

# Authentication endpoints
location /auth/ {
    limit_req zone=auth burst=10 nodelay;
    proxy_pass https://auth-service-backend;
    proxy_set_header Host auth-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "auth-service" always;
    
    # Security headers for auth
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
}

# API Keys management
location /apikeys/ {
    limit_req zone=auth burst=10 nodelay;
    proxy_pass https://auth-service-backend;
    proxy_set_header Host auth-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "auth-service" always;
    
    # Security headers for API key operations
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
}

# Customer management
location /customers {
    limit_req zone=auth burst=5 nodelay;
    proxy_pass https://auth-service-backend;
    proxy_set_header Host auth-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "auth-service" always;
}

# Auth service health
location /auth/health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://auth-service-backend/health;
    proxy_set_header Host auth-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "auth-service" always;
}

# ===========================================
# CAMPAIGN SERVICE ROUTES
# ===========================================

# Campaign management
location /campaigns {
    limit_req zone=api_general burst=10 nodelay;
    proxy_pass https://campaign-service-backend;
    proxy_set_header Host campaign-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "campaign-service" always;
}

# Performance analytics
location /performance {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://campaign-service-backend;
    proxy_set_header Host campaign-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "campaign-service" always;
}

# Campaign service health
location /campaign/health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://campaign-service-backend/health;
    proxy_set_header Host campaign-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "campaign-service" always;
}

# ===========================================
# POSTBACK SERVICE ROUTES
# ===========================================

# Postback/webhook endpoints
location /api/postbacks {
    limit_req zone=postback burst=20 nodelay;
    proxy_pass https://postback-service-backend;
    proxy_set_header Host postback-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "postback-service" always;
}

location /api/webhooks {
    limit_req zone=postback burst=20 nodelay;
    proxy_pass https://postback-service-backend;
    proxy_set_header Host postback-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "postback-service" always;
}

location /api/retry {
    limit_req zone=postback burst=10 nodelay;
    proxy_pass https://postback-service-backend;
    proxy_set_header Host postback-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "postback-service" always;
}

# Postback service health
location /api/health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://postback-service-backend;
    proxy_set_header Host postback-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "postback-service" always;
}

# ===========================================
# GATEWAY HEALTH & MONITORING
# ===========================================

# Gateway health check aggregator
location /gateway/health {
    access_log off;
    add_header Content-Type application/json always;
    return 200 '{"status":"healthy","gateway":"nginx","timestamp":"$time_iso8601","services":{"core":"ok","tracking":"ok","auth":"ok","campaign":"ok","postback":"ok"}}';
}

# Service discovery endpoint
location /gateway/services {
    limit_req zone=api_general burst=5 nodelay;
    access_log off;
    add_header Content-Type application/json always;
    return 200 '{
        "services": {
            "core": {"url": "/", "health": "/health", "priority": "high"},
            "tracking": {"url": "/ads/", "health": "/tracking/health", "priority": "high"},
            "auth": {"url": "/auth/", "health": "/auth/health", "priority": "medium"},
            "campaign": {"url": "/campaigns", "health": "/campaign/health", "priority": "medium"},
            "postback": {"url": "/api/", "health": "/api/health", "priority": "medium"}
        },
        "gateway": {"status": "active", "version": "1.0.0"}
    }';
}

# API documentation endpoint
location /gateway/docs {
    limit_req zone=api_general burst=5 nodelay;
    access_log off;
    add_header Content-Type text/html always;
    return 200 '<!DOCTYPE html>
<html><head><title>Xafra-ads v5 API Gateway</title></head>
<body>
<h1>Xafra-ads v5 API Gateway</h1>
<h2>Available Services:</h2>
<ul>
<li><strong>Core Service:</strong> /{trackingId} - Ad redirects</li>
<li><strong>Tracking Service:</strong> /ads/click, /confirm/sale - Click tracking</li>
<li><strong>Auth Service:</strong> /auth/login, /customers - Authentication</li>
<li><strong>Campaign Service:</strong> /campaigns, /performance - Campaign management</li>
<li><strong>Postback Service:</strong> /api/postbacks, /api/webhooks - Webhooks</li>
</ul>
<h2>Health Checks:</h2>
<ul>
<li><a href="/gateway/health">Gateway Health</a></li>
<li><a href="/gateway/services">Service Discovery</a></li>
</ul>
</body></html>';
}

# ===========================================
# ERROR HANDLING & FALLBACKS
# ===========================================

# Custom error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /404.html {
    root /usr/share/nginx/html;
    internal;
}

location = /50x.html {
    root /usr/share/nginx/html;
    internal;
}

# Catch-all for unknown routes
location / {
    limit_req zone=api_general burst=5 nodelay;
    
    # If no specific route matches, try core service for potential tracking IDs
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service-fallback" always;
}