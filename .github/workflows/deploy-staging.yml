# 🧪 CI/CD Pipeline - STAGING DEPLOYMENT
# =====================================
# Trigger: Push to 'develop' branch
# Target: Staging environment (*.run.app URLs)
# Purpose: Continuous integration and testing

name: 🧪 Deploy to Staging

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  PROJECT_ID: xafra-ads
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/xafra-ads

jobs:
  # ========================================
  # JOB 1: RUN TESTS
  # ========================================
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 🔧 Install root dependencies
      run: |
        echo "Installing root dependencies..."
        npm ci || echo "Root npm ci failed, trying npm install..."
        npm install || echo "Root install failed, continuing..."
      
    - name: 🔧 Generate Prisma Client
      run: |
        echo "Generating Prisma Client..."
        cd packages/database
        npx prisma generate || echo "Prisma generate failed, continuing..."
        cd ../..
        
    - name: 🧪 Build and validate all services
      run: |
        services=("core-service" "auth-service" "campaign-service" "tracking-service" "postback-service")
        failed_services=()
        
        for service in "${services[@]}"; do
          if [ -d "services/$service" ]; then
            echo "🏗️ Building $service..."
            cd "services/$service"
            
            # Install service dependencies
            if [ -f "package.json" ]; then
              npm ci || npm install || echo "⚠️ Dependencies install failed for $service"
              
              # Build the service
              if npm run build; then
                echo "✅ $service built successfully"
              else
                echo "❌ $service build failed"
                failed_services+=("$service")
              fi
            else
              echo "⚠️ No package.json found in $service"
            fi
            
            cd ../..
          else
            echo "⚠️ Service directory not found: $service"
          fi
        done
        
        # Report results
        if [ ${#failed_services[@]} -eq 0 ]; then
          echo "✅ All services built successfully!"
        else
          echo "⚠️ Failed services: ${failed_services[*]}"
          echo "Continuing with deployment of successful services..."
        fi

  # ========================================
  # JOB 2: DEPLOY TO STAGING
  # ========================================
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push' && (success() || failure())
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/697203931362/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
        service_account: 'github-actions-xafra@xafra-ads.iam.gserviceaccount.com'
        
    - name: ⚙️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: 🔧 Configure Docker for GAR
      run: gcloud auth configure-docker us-central1-docker.pkg.dev
      
    - name: 🏗️ Deploy Core Service
      run: |
        echo "Deploying Core Service..."
        gcloud builds submit --config=cloudbuild-core-stg.yaml || echo "❌ Core Service deployment failed"
      continue-on-error: true
        
    - name: 🔐 Deploy Auth Service
      run: |
        echo "Deploying Auth Service..."
        gcloud builds submit --config=cloudbuild-auth-stg.yaml || echo "❌ Auth Service deployment failed"
      continue-on-error: true
        
    - name: 📊 Deploy Campaign Service
      run: |
        echo "Deploying Campaign Service..."
        gcloud builds submit --config=cloudbuild-campaign-stg.yaml || echo "❌ Campaign Service deployment failed"
      continue-on-error: true
        
    - name: 📈 Deploy Tracking Service
      run: |
        echo "Deploying Tracking Service..."
        gcloud builds submit --config=cloudbuild-tracking-stg.yaml || echo "❌ Tracking Service deployment failed"
      continue-on-error: true
        
    - name: 📤 Deploy Postback Service
      run: |
        echo "Deploying Postback Service..."
        gcloud builds submit --config=cloudbuild-postback-stg.yaml || echo "❌ Postback Service deployment failed"
      continue-on-error: true
        
    - name: 🌐 Deploy Gateway
      run: |
        echo "Deploying Gateway..."
        gcloud builds submit --config=cloudbuild-gateway-stg.yaml || echo "❌ Gateway deployment failed"
      continue-on-error: true

  # ========================================
  # JOB 3: HEALTH CHECKS
  # ========================================
  health-check:
    name: 🔍 Health Check
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push' && (success() || failure())
    
    steps:
    - name: ⏱️ Wait for services to start
      run: sleep 60
      
    - name: 🔍 Check Core Service
      run: |
        echo "Checking Core Service health..."
        curl -f https://core-service-stg-697203931362.us-central1.run.app/health || echo "⚠️ Core Service health check failed"
      continue-on-error: true
        
    - name: 🔍 Check Postback Service
      run: |
        echo "Checking Postback Service health..."
        curl -f https://postback-service-stg-697203931362.us-central1.run.app/api/health || echo "⚠️ Postback Service health check failed"
      continue-on-error: true
        
    - name: 🔍 Check Gateway
      run: |
        echo "Checking Gateway health..."
        curl -f https://gateway-stg-697203931362.us-central1.run.app/gateway/health || echo "⚠️ Gateway health check failed"
      continue-on-error: true
        
    - name: ✅ Health check summary
      run: |
        echo "🎉 Health check process completed!"
        echo "Check individual service logs above for detailed status"