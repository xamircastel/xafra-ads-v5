# ðŸš€ CLOUDBUILD TEMPLATE UNIFICADO PARA XAFRA-ADS V5
# Este archivo sirve como base para todos los servicios

substitutions:
  _SERVICE_NAME: 'replace-with-service-name'
  _SERVICE_PORT: '8080'
  _REGION: 'us-central1'
  _ENV: 'staging'

steps:
  # Paso 1: Build de la imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/xafra-ads/xafra-ads/${_SERVICE_NAME}-${_ENV}:${BUILD_ID}'
      - '-t'
      - 'us-central1-docker.pkg.dev/xafra-ads/xafra-ads/${_SERVICE_NAME}-${_ENV}:latest'
      - '-f'
      - 'deployment/Dockerfile.template'
      - '--build-arg'
      - 'SERVICE_NAME=${_SERVICE_NAME}'
      - '--build-arg'
      - 'SERVICE_PORT=${_SERVICE_PORT}'
      - '.'

  # Paso 2: Deploy a Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}-${_ENV}'
      - '--image'
      - 'us-central1-docker.pkg.dev/xafra-ads/xafra-ads/${_SERVICE_NAME}-${_ENV}:${BUILD_ID}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '10'
      - '--port'
      - '${_SERVICE_PORT}'
      - '--set-env-vars'
      - 'NODE_ENV=${_ENV},PORT=${_SERVICE_PORT}'
      - '--timeout'
      - '300'

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'