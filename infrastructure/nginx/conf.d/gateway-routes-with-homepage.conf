# Xafra-ads v5 - Gateway Routes Configuration WITH HOMEPAGE
# Service routing rules for API Gateway (SAFE HOMEPAGE IMPLEMENTATION)

# Global proxy settings
proxy_ssl_verify off;
proxy_ssl_server_name on;
proxy_ssl_protocols TLSv1.2 TLSv1.3;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header Connection "";
proxy_http_version 1.1;
proxy_connect_timeout 5s;
proxy_send_timeout 10s;
proxy_read_timeout 10s;
proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

# ===========================================
# SPECIFIC ROUTES FIRST (HIGHEST PRIORITY)
# ===========================================

# Gateway health check - CRITICAL (must be accessible)
location /gateway/health {
    limit_req zone=api_general burst=5 nodelay;
    access_log off;
    add_header Content-Type text/plain;
    add_header X-Service "gateway" always;
    return 200 "Gateway OK\n";
}

# Core service health check - CRITICAL
location /health {
    limit_req zone=api_general burst=5 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service" always;
}

# ===========================================
# CORE SERVICE ROUTES (Main ad redirects)
# ===========================================

# Ad redirect endpoints - HIGHEST PRIORITY (must be < 50ms)
location ~ "^/[a-zA-Z0-9]{6,12}$" {
    limit_req zone=ads_redirect burst=20 nodelay;
    
    # Cache for performance
    proxy_cache_bypass $http_pragma $http_authorization;
    proxy_no_cache $http_pragma $http_authorization;
    
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    
    # Performance headers
    add_header X-Service "core-service" always;
    add_header X-Response-Time $request_time always;
}

# Ads routes - SPECIFIC PATTERNS
location /ads/ {
    limit_req zone=ads_redirect burst=30 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service" always;
}

# API routes - SPECIFIC PATTERNS
location /api/ {
    limit_req zone=api_general burst=10 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service-api" always;
}

# Confirm/postback routes
location /confirm/ {
    limit_req zone=tracking burst=20 nodelay;
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service-confirm" always;
}

# ===========================================
# STATIC ASSETS FOR HOMEPAGE (SAFE)
# ===========================================

# Homepage static assets (CSS, JS, images)
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    root /usr/share/nginx/html;
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header X-Service "gateway-static" always;
    access_log off;
    
    # Fallback to 404 if asset not found
    try_files $uri =404;
}

# ===========================================
# HOMEPAGE ROUTE (CAREFUL IMPLEMENTATION)
# ===========================================

# Homepage - EXACT MATCH for root only
location = / {
    root /usr/share/nginx/html;
    index index.html;
    add_header X-Service "gateway-homepage" always;
    add_header Cache-Control "no-cache, must-revalidate";
    
    # Try homepage, fallback to simple message
    try_files /index.html @homepage_fallback;
}

# Homepage fallback if React build fails
location @homepage_fallback {
    add_header Content-Type text/html;
    add_header X-Service "gateway-homepage-fallback" always;
    return 200 '<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Xafra-ads v5</title>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; margin-top: 100px; }
        .container { max-width: 600px; margin: 0 auto; }
        .logo { font-size: 2rem; color: #667eea; margin-bottom: 1rem; }
        .status { color: #28a745; }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">ðŸš€ Xafra-ads v5</div>
        <h1>Sistema de Publicidad Digital</h1>
        <p class="status">âœ… Gateway Operativo</p>
        <p>Plataforma de alta performance para redirects publicitarios</p>
        <hr>
        <p><small>v5.0.0 | Staging Environment</small></p>
    </div>
</body>
</html>';
}

# ===========================================
# ERROR HANDLING & SECURITY
# ===========================================

# Custom error pages
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;

location = /404.html {
    root /usr/share/nginx/html;
    internal;
    add_header X-Service "gateway-error" always;
}

location = /50x.html {
    root /usr/share/nginx/html;
    internal;
    add_header X-Service "gateway-error" always;
}

# ===========================================
# FALLBACK ROUTE (LAST RESORT)
# ===========================================

# Catch-all for potential tracking IDs not caught by regex
# This should be LAST to avoid interfering with homepage
location / {
    limit_req zone=api_general burst=5 nodelay;
    
    # Try to serve as static file first, then proxy to core service
    root /usr/share/nginx/html;
    try_files $uri @core_service_fallback;
}

# Fallback to core service for unmatched routes
location @core_service_fallback {
    proxy_pass https://core-service-backend;
    proxy_set_header Host core-service-stg-697203931362.us-central1.run.app;
    add_header X-Service "core-service-fallback" always;
}